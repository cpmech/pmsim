// use pmsim::base::SampleMeshes;
// use pmsim::prelude::*;
use pmsim::StrError;
// use russell_chk::vec_approx_eq;

#[test]
fn test_rod_bhatti_4d14_truss3d() -> Result<(), StrError> {
    // auto correct_kk0 = vector<double>{
    //     7.575392232510288e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.454282407407408e+03, 0.000000000000000e+00, -7.575392232510288e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.454282407407408e+03, 0.000000000000000e+00,   // 0
    //     0.000000000000000e+00, 6.293402777777778e+00, 0.000000000000000e+00, -4.531250000000000e+02, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -6.293402777777778e+00, 0.000000000000000e+00, -4.531250000000000e+02, 0.000000000000000e+00, 0.000000000000000e+00, // 1
    //     0.000000000000000e+00, 0.000000000000000e+00, 8.055555555555555e+02, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -8.055555555555555e+02, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00,   // 2
    //     0.000000000000000e+00, -4.531250000000000e+02, 0.000000000000000e+00, 4.350000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.531250000000000e+02, 0.000000000000000e+00, 2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00,   // 3
    //     5.454282407407408e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.236111111111111e+05, 0.000000000000000e+00, -5.454282407407408e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 2.618055555555556e+05, 0.000000000000000e+00,   // 4
    //     0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.666666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -4.666666666666667e+03,   // 5
    //     -7.575392232510288e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -5.454282407407408e+03, 0.000000000000000e+00, 7.575392232510288e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -5.454282407407408e+03, 0.000000000000000e+00, // 6
    //     0.000000000000000e+00, -6.293402777777778e+00, 0.000000000000000e+00, 4.531250000000000e+02, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.293402777777778e+00, 0.000000000000000e+00, 4.531250000000000e+02, 0.000000000000000e+00, 0.000000000000000e+00,   // 7
    //     0.000000000000000e+00, 0.000000000000000e+00, -8.055555555555555e+02, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.055555555555555e+02, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00,   // 8
    //     0.000000000000000e+00, -4.531250000000000e+02, 0.000000000000000e+00, 2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.531250000000000e+02, 0.000000000000000e+00, 4.350000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00,   // 9
    //     5.454282407407408e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 2.618055555555556e+05, 0.000000000000000e+00, -5.454282407407408e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.236111111111111e+05, 0.000000000000000e+00,   // 10
    //     0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -4.666666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.666666666666667e+03};  // 11
    // auto correct_kk1 = vector<double>{
    //     1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00,   // 0
    //     0.000000000000000e+00, 5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.546666666666667e+03, 0.000000000000000e+00, -5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.546666666666667e+03,   // 1
    //     0.000000000000000e+00, 0.000000000000000e+00, 7.250000000000000e+02, 0.000000000000000e+00, -2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -7.250000000000000e+02, 0.000000000000000e+00, -2.175000000000000e+04, 0.000000000000000e+00, // 2
    //     0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.026666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -8.026666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00,   // 3
    //     0.000000000000000e+00, 0.000000000000000e+00, -2.175000000000000e+04, 0.000000000000000e+00, 8.700000000000000e+05, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 2.175000000000000e+04, 0.000000000000000e+00, 4.350000000000000e+05, 0.000000000000000e+00,   // 4
    //     0.000000000000000e+00, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.186666666666666e+04, 0.000000000000000e+00, -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 3.093333333333333e+04,   // 5
    //     -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00,   // 6
    //     0.000000000000000e+00, -5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -1.546666666666667e+03, 0.000000000000000e+00, 5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -1.546666666666667e+03, // 7
    //     0.000000000000000e+00, 0.000000000000000e+00, -7.250000000000000e+02, 0.000000000000000e+00, 2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 7.250000000000000e+02, 0.000000000000000e+00, 2.175000000000000e+04, 0.000000000000000e+00,   // 8
    //     0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -8.026666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.026666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00,   // 9
    //     0.000000000000000e+00, 0.000000000000000e+00, -2.175000000000000e+04, 0.000000000000000e+00, 4.350000000000000e+05, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 2.175000000000000e+04, 0.000000000000000e+00, 8.700000000000000e+05, 0.000000000000000e+00,   // 10
    //     0.000000000000000e+00, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 3.093333333333333e+04, 0.000000000000000e+00, -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.186666666666666e+04};  // 11
    // auto correct_kk2 = vector<double>{
    //     5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -1.546666666666667e+03, -5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -1.546666666666667e+03, // 0
    //     0.000000000000000e+00, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00,   // 1
    //     0.000000000000000e+00, 0.000000000000000e+00, 7.250000000000000e+02, 2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -7.250000000000000e+02, 2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00,   // 2
    //     0.000000000000000e+00, 0.000000000000000e+00, 2.175000000000000e+04, 8.700000000000000e+05, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -2.175000000000000e+04, 4.350000000000000e+05, 0.000000000000000e+00, 0.000000000000000e+00,   // 3
    //     0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.026666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -8.026666666666667e+03, 0.000000000000000e+00,   // 4
    //     -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.186666666666666e+04, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 3.093333333333333e+04,   // 5
    //     -5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.546666666666667e+03, 5.155555555555556e+01, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.546666666666667e+03,   // 6
    //     0.000000000000000e+00, -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00,   // 7
    //     0.000000000000000e+00, 0.000000000000000e+00, -7.250000000000000e+02, -2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 7.250000000000000e+02, -2.175000000000000e+04, 0.000000000000000e+00, 0.000000000000000e+00, // 8
    //     0.000000000000000e+00, 0.000000000000000e+00, 2.175000000000000e+04, 4.350000000000000e+05, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -2.175000000000000e+04, 8.700000000000000e+05, 0.000000000000000e+00, 0.000000000000000e+00,   // 9
    //     0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -8.026666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.026666666666667e+03, 0.000000000000000e+00,   // 10
    //     -1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 3.093333333333333e+04, 1.546666666666667e+03, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.186666666666666e+04};  // 11

    Ok(())
}
