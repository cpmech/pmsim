### file generated by the 'plotpy' Rust crate

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as tck
import matplotlib.patches as pat
import matplotlib.path as pth
import matplotlib.patheffects as pff
import matplotlib.lines as lns
import matplotlib.transforms as tra
import mpl_toolkits.mplot3d

# Variable to handle NaN values coming from Rust
NaN = np.nan

# List of additional objects to calculate bounding boxes
EXTRA_ARTISTS = []

# Adds an entity to the EXTRA_ARTISTS list to calculate bounding boxes
def add_to_ea(obj):
    global EXTRA_ARTISTS
    if obj!=None: EXTRA_ARTISTS.append(obj)

# Is a dictionary of mplot3d objects (one for each subplot_3d)
THREE_D = dict()

# Is a tuple holding the key to the current THREE_D object (defines the subplot_3d)
THREE_D_ACTIVE = (1,1,1)

# Creates or returns the mplot3d object with the current subplot_3d definition specified by THREE_D_ACTIVE
def ax3d():
    global THREE_D
    global THREE_D_ACTIVE
    if not THREE_D_ACTIVE in THREE_D:
        a, b, c = THREE_D_ACTIVE
        THREE_D[THREE_D_ACTIVE] = plt.gcf().add_subplot(a,b,c,projection='3d')
        THREE_D[THREE_D_ACTIVE].set_xlabel('x')
        THREE_D[THREE_D_ACTIVE].set_ylabel('y')
        THREE_D[THREE_D_ACTIVE].set_zlabel('z')
        add_to_ea(THREE_D[THREE_D_ACTIVE])
    return THREE_D[THREE_D_ACTIVE]

# Specifies the THREE_D_ACTIVE parameters to define a subplot_3d
def subplot_3d(a,b,c):
    global THREE_D_ACTIVE
    THREE_D_ACTIVE = (a,b,c)
    ax3d()

# Transforms data limits to axis limits
def data_to_axis(coords):
    plt.axis() # must call this first
    return plt.gca().transLimits.transform(coords)

# Transforms axis limits to data limits
def axis_to_data(coords):
    plt.axis() # must call this first
    return plt.gca().transLimits.inverted().transform(coords)

# Configures the aspect of axes with a same scaling from data to plot units for x, y and z.
def set_equal_axes():
    global THREE_D
    if len(THREE_D) == 0:
        ax = plt.gca()
        ax.axes.set_aspect('equal')
        return
    try:
        ax = ax3d()
        ax.set_box_aspect([1,1,1])
        limits = np.array([ax.get_xlim3d(), ax.get_ylim3d(), ax.get_zlim3d()])
        origin = np.mean(limits, axis=1)
        radius = 0.5 * np.max(np.abs(limits[:, 1] - limits[:, 0]))
        x, y, z = origin
        ax.set_xlim3d([x - radius, x + radius])
        ax.set_ylim3d([y - radius, y + radius])
        ax.set_zlim3d([z - radius, z + radius])
    except:
        import matplotlib
        print('VERSION of MATPLOTLIB = {}'.format(matplotlib.__version__))
        print('ERROR: set_box_aspect is missing in this version of Matplotlib')

# Function to ignore calls to plt such as the colorbar in an inset Axes
def ignore_this(*args, **kwargs):
    pass

################## plotting commands follow after this line ############################

grid_grid=plt.GridSpec(2,4,hspace=0.25,wspace=1.0)

plt.subplot(grid_grid[0,0:3])
x=np.array([0,0.00023765046183483833,0.00047530092366967667,0.0007129513855045151,0.0009506018473393533,0.0011882523091741916,0.0014259027710090302,0.0016635532328438682,0.0019012036946787067,0.002138854156513545,0.002376504618348383,0.0026141550801832216,0.0028518055420180604,0.003089456003852898,0.0033271064656877365,0.0035647569275225753,0.0038024073893574133,0.004040057851192252,0.00427770831302709,0.004515358774861928,0.004753009236696766,0.004990659698531604,0.005228310160366443,0.005465960622201282,0.005703611084036121,0.005941261545870959,0.006178912007705796,0.0064165624695406345,0.006654212931375473,0.006891863393210312,0.007129513855045151,0.007367164316879989,0.007604814778714827,0.007842465240549663,0.008080115702384504,0.008317766164219342,0.00855541662605418,0.00879306708788902,0.009030717549723856,0.009268368011558696,0.009506018473393532,0.009743668935228373,0.009981319397063208,0.010218969858898048,0.010456620320732886,0.010694270782567726,0.010931921244402565,0.011169571706237402,0.011407222168072242,0.011644872629907078,0.011882523091741919,0.012120173553576757,0.012357824015411592,0.012595474477246429,0.012833124939081269,0.013070775400916107,0.013308425862750946,0.013546076324585783,0.013783726786420624,0.014021377248255461,0.014259027710090301,0.014496678171925138,0.014734328633759978,0.014971979095594815,0.015209629557429653,0.015447280019264488,0.015684930481099327,0.015922580942934167,0.016160231404769007,0.016397881866603844,0.016635532328438684,0.016873182790273524,0.01711083325210836,0.0173484837139432,0.01758613417577804,0.017823784637612874,0.01806143509944771,0.01829908556128255,0.01853673602311739,0.018774386484952228,0.019012036946787065,0.019249687408621905,0.019487337870456745,0.019724988332291582,0.019962638794126415,0.020201440913432008,0.020443477209927587,0.020688844026575594,0.020937599179128637,0.02118980184409956,0.021445512602174404,0.02170479348341458,0.021967708014339206,0.02223432126698363,0.02250469991003697,0.022778912262166467,0.023057028347644726,0.023339119954401504,0.02362526069463111,0.023915526068093603,0.024209993528257534,0.024508742551441472,0.024811854709122,0.02511941374358684,0.025431505647124236,0.025748218744952082,0.026069643782104863,0.026395874014511555,0.02672700530451342,0.027063136221089298,0.027404368145074205,0.02775080537967866,0.028102555266638,0.028459728308345977,0.028822438296353167,0.029190802446639855,0.029564941542104383,0.029944980082742153,0.03033104644402859,0.03072327304405919,0.031121796520045226,0.031526757914812256,0.03193830287400229,0.03235658185473883,0.03278175034657888,0.03321396910564672,0.0336534044029217,0.03410022828773967,0.034554618867660224,0.035016760605958916,0.035486844638117895,0.03596506910881697,0.03645163953107077,0.036946769169313054,0.037450679448407936,0.03796360039076219,0.03848577108393172,0.039017440181359955,0.039558866439159866,0.040110319292157845,0.04067207947276305,0.04124443967661433,0.041827705279394105,0.0424221951096951,0.043028242283384095,0.04364619510554569,0.04427641804680937,0.0449192928016901,0.04557521943751292,0.046244617643570775,0.04692792809140261,0.047625613918504804,0.048338162349431134,0.049066086470142406,0.049809927173673066,0.05057025529775542,0.051347673978044246,0.05214282124410275,0.052956372889448766,0.05378904565184009,0.05464160074575791,0.05551484779592219,0.056409649228873926,0.05732692518950189,0.058267659061234885,0.05923290368296078,0.06022378837316957,0.0612415268931366,0.06228742650716674,0.06336289833033339,0.0644694691944679,0.06560879531367,0.06678267809431554,0.06799308251550497,0.06924215860959596,0.0705322667064378,0.07186600727957625,0.07324625646262621,0.07467620860991304,0.07615942768713296,0.07769990983860647,0.07930216025209708,0.08097128852725573,0.08271312829883755,0.08453438910522593,0.08644285180276758,0.0884476238267958,0.09055947834142704,0.09279131364036645,0.09515878939502098,0.09768123080135899,0.10038295286704202,0.10329527126889755,0.10645969232987518,0.10993325613233441,0.11379812974883512,0.1181804964030338,0.12329289522307446,0.12954999468366651,0.13802301905910558,0.1599943432123603,],dtype=float)
y=np.array([0,0.0016635532328438684,0.003327106465687737,0.0049906596985316055,0.006654212931375474,0.008317766164219342,0.009981319397063211,0.011644872629907078,0.013308425862750948,0.014971979095594817,0.016635532328438684,0.01829908556128255,0.019962638794126422,0.02162619202697029,0.023289745259814157,0.024953298492658028,0.026616851725501895,0.028280404958345762,0.029943958191189633,0.0316075114240335,0.03327106465687737,0.034934617889721235,0.0365981711225651,0.03826172435540898,0.039925277588252844,0.04158883082109671,0.04325238405394058,0.044915937286784446,0.046579490519628314,0.04824304375247219,0.049906596985316055,0.05157015021815992,0.05323370345100379,0.05489725668384766,0.056560809916691525,0.05822436314953539,0.059887916382379267,0.061551469615223134,0.063215022848067,0.06487857608091087,0.06654212931375474,0.0682056825465986,0.06986923577944247,0.07153278901228634,0.0731963422451302,0.07485989547797409,0.07652344871081795,0.07818700194366182,0.07985055517650569,0.08151410840934956,0.08317766164219342,0.08484121487503729,0.08650476810788116,0.08816832134072503,0.08983187457356889,0.09149542780641276,0.09315898103925663,0.0948225342721005,0.09648608750494438,0.09814964073778824,0.09981319397063211,0.10147674720347598,0.10314030043631985,0.10480385366916371,0.10646740690200758,0.10813096013485145,0.10979451336769531,0.11145806660053918,0.11312161983338305,0.11478517306622692,0.11644872629907078,0.11811227953191467,0.11977583276475853,0.1214393859976024,0.12310293923044627,0.12476649246329014,0.126430045696134,0.12809359892897787,0.12975715216182174,0.1314207053946656,0.13308425862750947,0.13474781186035334,0.1364113650931972,0.13807491832604107,0.13973847155888494,0.1414020247917288,0.14306557802457268,0.14472913125741654,0.1463926844902604,0.14805623772310428,0.14971979095594817,0.15138334418879204,0.1530468974216359,0.15471045065447978,0.15637400388732364,0.1580375571201675,0.15970111035301138,0.16136466358585524,0.1630282168186991,0.16469177005154298,0.16635532328438685,0.16801887651723071,0.16968242975007458,0.17134598298291845,0.17300953621576232,0.17467308944860618,0.17633664268145005,0.17800019591429392,0.17966374914713779,0.18132730237998165,0.18299085561282552,0.1846544088456694,0.18631796207851326,0.18798151531135712,0.189645068544201,0.19130862177704486,0.19297217500988875,0.19463572824273262,0.1962992814755765,0.19796283470842035,0.19962638794126422,0.2012899411741081,0.20295349440695196,0.20461704763979582,0.2062806008726397,0.20794415410548356,0.20960770733832743,0.2112712605711713,0.21293481380401516,0.21459836703685903,0.2162619202697029,0.21792547350254676,0.21958902673539063,0.2212525799682345,0.22291613320107836,0.22457968643392223,0.2262432396667661,0.22790679289960997,0.22957034613245383,0.2312338993652977,0.23289745259814157,0.23456100583098546,0.23622455906382933,0.2378881122966732,0.23955166552951707,0.24121521876236093,0.2428787719952048,0.24454232522804867,0.24620587846089254,0.2478694316937364,0.24953298492658027,0.2511965381594241,0.252860091392268,0.25452364462511184,0.25618719785795574,0.25785075109079963,0.2595143043236435,0.26117785755648737,0.2628414107893312,0.2645049640221751,0.26616851725501894,0.26783207048786284,0.2694956237207067,0.2711591769535506,0.2728227301863944,0.2744862834192383,0.27614983665208215,0.27781338988492604,0.2794769431177699,0.2811404963506138,0.2828040495834576,0.2844676028163015,0.28613115604914535,0.28779470928198925,0.2894582625148331,0.291121815747677,0.2927853689805208,0.2944489222133647,0.29611247544620856,0.29777602867905245,0.29943958191189635,0.3011031351447402,0.3027666883775841,0.3044302416104279,0.3060937948432718,0.30775734807611566,0.30942090130895955,0.3110844545418034,0.3127480077746473,0.3144115610074911,0.316075114240335,0.31773866747317886,0.31940222070602275,0.3210657739388666,0.3227293271717105,0.32439288040455433,0.3260564336373982,0.32771998687024206,0.32938354010308596,0.3310470933359298,0.3327106465687737,],dtype=float)
plt.plot(x,y,label=r'analytical')
x=np.array([0,0.021903,0.078353,0.13496,0.143598,],dtype=float)
y=np.array([0,0.149531,0.30047,0.329312,0.333162,],dtype=float)
plt.plot(x,y,label=r'de Souza Neto et al. (2008)',linestyle='None',markerfacecolor='none',marker='D')
x=np.array([0,0.021441344343919116,0.07782614298616505,0.13424981866043348,0.14643769409666016,],dtype=float)
y=np.array([0,0.15,0.3,0.33,0.33269,],dtype=float)
plt.plot(x,y,label=r'numerical',linestyle='--',markerfacecolor='none',marker='o')
plt.gca().set_axisbelow(True)
plt.grid(linestyle='--',color='grey',zorder=-1000)
plt.gca().set_xlabel(r'Radial displacement at outer face $u_b$')
plt.gca().set_ylabel(r'Internal pressure $P$')
h,l=plt.gca().get_legend_handles_labels()
if len(h)>0 and len(l)>0:
    leg=plt.legend(handlelength=3,ncol=1,loc='best')
    add_to_ea(leg)

plt.subplot(grid_grid[1,0:2])
x=np.array([100,100.5,101,101.5,102,102.5,103,103.5,104,104.5,105,105.5,106,106.5,107,107.5,108,108.5,109,109.5,110,110.5,111,111.5,112,112.5,113,113.5,114,114.5,115,115.5,116,116.5,117,117.5,118,118.5,119,119.5,120,120.5,121,121.5,122,122.5,123,123.5,124,124.5,125,125.5,126,126.5,127,127.5,128,128.5,129,129.5,130,130.5,131,131.5,132,132.5,133,133.5,134,134.5,135,135.5,136,136.5,137,137.5,138,138.5,139,139.5,140,140.5,141,141.5,142,142.5,143,143.5,144,144.5,145,145.5,146,146.5,147,147.5,148,148.5,149,149.5,150,150.5,151,151.5,152,152.5,153,153.5,154,154.5,155,155.5,156,156.5,157,157.5,158,158.5,159,159.5,160,160.5,161,161.5,162,162.5,163,163.5,164,164.5,165,165.5,166,166.5,167,167.5,168,168.5,169,169.5,170,170.5,171,171.5,172,172.5,173,173.5,174,174.5,175,175.5,176,176.5,177,177.5,178,178.5,179,179.5,180,180.5,181,181.5,182,182.5,183,183.5,184,184.5,185,185.5,186,186.5,187,187.5,188,188.5,189,189.5,190,190.5,191,191.5,192,192.5,193,193.5,194,194.5,195,195.5,196,196.5,197,197.5,198,198.5,199,199.5,200,],dtype=float)
y=np.array([0.09000000000000014,0.09239401992529897,0.0947761588095209,0.09714653399700048,0.09950526110216641,0.10130738052828402,0.10015060957932553,0.09901608379289915,0.09790327100041382,0.09681165423768737,0.09574073124055008,0.09469001395948161,0.09365902809247686,0.09264731263537421,0.0916544194489151,0.09067991284183813,0.08972336916934216,0.08878437644628452,0.08786253397450829,0.08695745198372105,0.0860687512853731,0.08519606293900786,0.08433902793058184,0.0834972968622725,0.0826705296533149,0.08185839525142798,0.08106057135441051,0.08027674414150524,0.0795066080141474,0.07874986534573064,0.07800622624003856,0.07727540829800598,0.07655713639248847,0.0758511424507314,0.07515716524424446,0.07447495018579872,0.073804249133276,0.07314482020011125,0.07249642757207987,0.07185884133019198,0.07123183727946551,0.07061519678335951,0.07000870660365816,0.06941215874560427,0.06882535030808964,0.06824808333871692,0.06768016469355598,0.06712140590142399,0.0665716230325259,0.06603063657129829,0.06549827129330607,0.06497435614604692,0.06445872413352476,0.06395121220445864,0.06345166114399868,0.06295991546882583,0.06247582332551694,0.061999236392061154,0.061530009782418314,0.0610680019540139,0.060613074618069286,0.06016509265267,0.0597239240184782,0.059289439676999296,0.05886151351131586,0.05844002224920555,0.05802484538856246,0.05761586512504471,0.05721296628187372,0.05681603624171346,0.05642496488056059,0.05603964450357899,0.05565996978281457,0.05528583769672854,0.05491714747148971,0.05455380052396843,0.05419570040637689,0.053842752752502436,0.05349486522548257,0.05315194746707213,0.052813911048354624,0.052480669421852026,0.052152137874988104,0.051828233484862825,0.05150887507429606,0.05119398316910088,0.05088347995654785,0.05057728924498303,0.05027533642456379,0.04997754842907777,0.049683853698811495,0.049394182144436236,0.04910846511187989,0.048826635348154776,0.04854862696811206,0.04827437542209472,0.04800381746446177,0.04773689112295754,0.04747353566890033,0.04721369158816618,0.04695730055294374,0.04670430539423745,0.04645465007509643,0.046208279664548234,0.04596514031221599,0.0457251792235993,0.04548834463599917,0.04525458579506837,0.04502385293196884,0.044796097241118514,0.04457127085851066,0.04434932684058906,0.04413021914366319,0.04391390260384773,0.04370033291751161,0.04348946662222208,0.04328126107816949,0.043075674450059574,0.042872665689459646,0.04267219451758633,0.04247422140852208,0.04227870757284875,0.042085614941686576,0.04189490615112708,0.04170654452704937,0.041520494070308875,0.041336719442288526,0.04115518595080229,0.040975859536341495,0.04079870675865457,0.040623694783651125,0.040450791370621623,0.040279964859764025,0.04011118416000927,0.039944418737137416,0.03977963860217675,0.039616814300078323,0.03945591689865848,0.03929691797780237,0.03913978961892148,0.03898450439465846,0.03883103535883287,0.03867935603662129,0.03852944041496586,0.03838126293320529,0.038234798473922374,0.038090022354002585,0.03794691031589821,0.03780543851909272,0.0376655835317602,0.03752732232261497,0.03739063225294634,0.03725549106883394,0.03712187689353895,0.036989768220066804,0.03685914390389698,0.0367299831558758,0.03660226553526795,0.036475970942962864,0.03635107961483214,0.036227572115234065,0.03610542933066174,0.03598463246353118,0.035865163026105956,0.03574700283455492,0.035630134003139906,0.0355145389385301,0.03540020033423997,0.03528710116518781,0.03517522468237198,0.03506455440766183,0.03495507412870079,0.03484676789391862,0.03473962000765051,0.03463361502536015,0.034528737748964596,0.03442497322225817,0.03432230672643333,0.034220723775696064,0.03412021011297355,0.034020751705712,0.03392233474176241,0.033824945625352404,0.03372857097314182,0.03363319761036041,0.03353881256702545,0.033445403074237656,0.03335295656055341,0.0332614606484316,0.03317090315075335,0.03308127206741295,0.0329925555819784,0.03290474205841984,0.03281782003790449,0.032731778235656504,0.03264660553788019,0.032562290998745275,0.03247882383743282,0.03239619343524022,0.03231438933274427,0.0322334012270207,],dtype=float)
plt.plot(x,y)

plt.subplot(grid_grid[1,2:4])
x=np.array([100,100.5,101,101.5,102,102.5,103,103.5,104,104.5,105,105.5,106,106.5,107,107.5,108,108.5,109,109.5,110,110.5,111,111.5,112,112.5,113,113.5,114,114.5,115,115.5,116,116.5,117,117.5,118,118.5,119,119.5,120,120.5,121,121.5,122,122.5,123,123.5,124,124.5,125,125.5,126,126.5,127,127.5,128,128.5,129,129.5,130,130.5,131,131.5,132,132.5,133,133.5,134,134.5,135,135.5,136,136.5,137,137.5,138,138.5,139,139.5,140,140.5,141,141.5,142,142.5,143,143.5,144,144.5,145,145.5,146,146.5,147,147.5,148,148.5,149,149.5,150,150.5,151,151.5,152,152.5,153,153.5,154,154.5,155,155.5,156,156.5,157,157.5,158,158.5,159,159.5,160,160.5,161,161.5,162,162.5,163,163.5,164,164.5,165,165.5,166,166.5,167,167.5,168,168.5,169,169.5,170,170.5,171,171.5,172,172.5,173,173.5,174,174.5,175,175.5,176,176.5,177,177.5,178,178.5,179,179.5,180,180.5,181,181.5,182,182.5,183,183.5,184,184.5,185,185.5,186,186.5,187,187.5,188,188.5,189,189.5,190,190.5,191,191.5,192,192.5,193,193.5,194,194.5,195,195.5,196,196.5,197,197.5,198,198.5,199,199.5,200,],dtype=float)
y=np.array([-0.14999999999999986,-0.14760598007470102,-0.1452238411904791,-0.1428534660029995,-0.14049473889783357,-0.13814795860252665,-0.13583441670460966,-0.13356536513175687,-0.13133973954678624,-0.12915650602133333,-0.12701466002705875,-0.1249132254649218,-0.1228512537309123,-0.12082782281670698,-0.11884203644378878,-0.11689302322963484,-0.11497993588464292,-0.1131019504385276,-0.11125826549497515,-0.1094481015134007,-0.10767070011670478,-0.10592532342397432,-0.10421125340712228,-0.10252779127050358,-0.10087425685258837,-0.09924998804881455,-0.09765434025477962,-0.09608668582896905,-0.09454641357425338,-0.09303292823741988,-0.0915456500260357,-0.09008401414197056,-0.08864747033093553,-0.0872354824474214,-0.08584752803444749,-0.08448309791755604,-0.0831416958125106,-0.08182283794618109,-0.08052605269011832,-0.07925088020634255,-0.07799687210488962,-0.0767635911126776,-0.07555061075327489,-0.07435751503716714,-0.07318389816213787,-0.07202936422339241,-0.07089352693307055,-0.06977600934880657,-0.06867644361101037,-0.06759447068855516,-0.06652974013257074,-0.06548190983805242,-0.06445064581300812,-0.06343562195487587,-0.06243651983395595,-0.06145302848361026,-0.06048484419699247,-0.05953167033008089,-0.05859321711079521,-0.05766920145398637,-0.056759346782097146,-0.055863382851298576,-0.054981045582915,-0.05411207689995718,-0.05325622456859031,-0.05241324204436969,-0.05158288832308351,-0.05076492779604802,-0.04995913010970604,-0.04916527002938552,-0.04838312730707977,-0.047612486553116576,-0.04685313711158773,-0.04610487293941567,-0.04536749248893799,-0.04464079859389545,-0.04392459835871236,-0.04321870305096345,-0.04252292799692375,-0.041837092480102846,-0.041161019642667836,-0.040494536389662626,-0.03983747329593479,-0.03918966451568424,-0.03855094769455069,-0.03792116388416033,-0.03730015745905428,-0.036687776035924644,-0.03608387039508616,-0.035488294404114135,-0.03490090494358159,-0.034321561834831066,-0.03375012776971836,-0.033186468242268126,-0.0326304514821827,-0.03208194839014802,-0.031540832474882145,-0.031006979791873675,-0.030480268883759237,-0.02996058072229093,-0.029447798651846074,-0.02894180833443347,-0.028442497696151446,-0.027949756875055062,-0.027463478170390583,-0.026983555993157177,-0.026509886817956914,-0.026042369136095336,-0.025580903409896275,-0.025125392028195612,-0.024675739262979904,-0.024231851227136718,-0.023793635833284973,-0.02336100275365404,-0.022933863380981818,-0.022512130790402752,-0.022095719702297574,-0.021684546446077722,-0.02127852892487788,-0.02087758658113125,-0.02048164036300274,-0.020090612691656098,-0.019704427429331733,-0.019323009848212745,-0.01894628660005732,-0.018574185686576337,-0.01820663643053564,-0.01784356944756317,-0.01748491661864158,-0.01713061106326772,-0.016780587113260838,-0.016434780287201828,-0.016093127265486642,-0.015755565865977136,-0.015422035020233421,-0.015092474750312092,-0.014766826146115231,-0.014445031343275546,-0.014127033501563326,-0.013812776783801536,-0.013502206335275515,-0.013195268263624339,-0.012891909619201168,-0.012592078375890312,-0.012295723412369166,-0.012002794493803329,-0.011713242253963757,-0.011427018177755014,-0.011144074584144025,-0.010864364609478991,-0.01058784219118853,-0.010314462051851273,-0.010044179683626475,-0.009776951333036497,-0.00951273398609219,-0.009251485353752552,-0.008993163857710193,-0.008737728616494482,-0.008485139431884314,-0.008235356775622866,-0.007988341776426714,-0.007744056207282066,-0.007502462473020958,-0.007263523598170499,-0.0070272032150684215,-0.006793465552238397,-0.006562275423018787,-0.00633359821443852,-0.006107399876334217,-0.005883646910702551,-0.005662306361282257,-0.00544334580336016,-0.005226733333795823,-0.0050124375612595985,-0.004800427596678898,-0.004590673043887788,-0.004383143990474929,-0.004177810998825247,-0.003974645097350717,-0.0037736177719056943,-0.0035747009573825735,-0.0033778670294834097,-0.0031830887966633947,-0.0029903394922422433,-0.002799592766679412,-0.0026108226800094906,-0.0024240036944339037,-0.0022391106670654115,-0.0020561188428217885,-0.0018750038474652892,-0.001695741680784503,-0.0015183087099153946,-0.001342681662798264,-0.0011688376217675676,-0.000996754017271595,-0.0008264086217189558,-0.0006577795434491453,-0.0004908452208242246,-0.00032558441643903177,-0.00016197621144713103,-0,],dtype=float)
plt.plot(x,y)

plt.subplot(grid_grid[0,3])
x=np.array([0,],dtype=float)
y=np.array([0,],dtype=float)
plt.plot(x,y,label=r' P = 0.15')
plt.axis([1,2,1,2])

plt.subplot(grid_grid[1,0:2])
x=np.array([100,100.5,101,101.5,102,102.5,103,103.5,104,104.5,105,105.5,106,106.5,107,107.5,108,108.5,109,109.5,110,110.5,111,111.5,112,112.5,113,113.5,114,114.5,115,115.5,116,116.5,117,117.5,118,118.5,119,119.5,120,120.5,121,121.5,122,122.5,123,123.5,124,124.5,125,125.5,126,126.5,127,127.5,128,128.5,129,129.5,130,130.5,131,131.5,132,132.5,133,133.5,134,134.5,135,135.5,136,136.5,137,137.5,138,138.5,139,139.5,140,140.5,141,141.5,142,142.5,143,143.5,144,144.5,145,145.5,146,146.5,147,147.5,148,148.5,149,149.5,150,150.5,151,151.5,152,152.5,153,153.5,154,154.5,155,155.5,156,156.5,157,157.5,158,158.5,159,159.5,160,160.5,161,161.5,162,162.5,163,163.5,164,164.5,165,165.5,166,166.5,167,167.5,168,168.5,169,169.5,170,170.5,171,171.5,172,172.5,173,173.5,174,174.5,175,175.5,176,176.5,177,177.5,178,178.5,179,179.5,180,180.5,181,181.5,182,182.5,183,183.5,184,184.5,185,185.5,186,186.5,187,187.5,188,188.5,189,189.5,190,190.5,191,191.5,192,192.5,193,193.5,194,194.5,195,195.5,196,196.5,197,197.5,198,198.5,199,199.5,200,],dtype=float)
y=np.array([-0.06,-0.05760598007470129,-0.05522384119047931,-0.0528534660029997,-0.05049473889783376,-0.04814754595662169,-0.045811774924058746,-0.043487315175680406,-0.04117405768642495,-0.03887189499994834,-0.036580721198672665,-0.034300431874545755,-0.032030924100491624,-0.029772096402533525,-0.027523848732568863,-0.025286082441779455,-0.023058700254658396,-0.02084160624363708,-0.01863470580429489,-0.016437905631137183,-0.01425111369392411,-0.012074239214536302,-0.009907192644363523,-0.007749885642200595,-0.005602231052638498,-0.003464142884935981,-0.0013355362923603664,0.0007836724480156842,0.0028935659550739334,0.004994225762977402,0.007085732340076181,0.009168165107403299,0.011241602456771157,0.013306121768478646,0.01536179942863904,0.017408710846138674,0.01944693046923521,0.021476531801805317,0.023497587419250204,0.02551016898406746,0.02751434726109819,0.02951019213245673,0.03149777261215183,0.033477156860405644,0.03544841219767928,0.03741160511841135,0.03936680130447653,0.04131406563837137,0.043253462216133805,0.045185054360002,0.04710890463082066,0.04902507484019869,0.050933626062425574,0.0528346186461521,0.054728112225839974,0.056614165732986915,0.05849283740713236,0.06036418480664786,0.06222826481931873,0.0640851336727205,0.06593484694439568,0.06777745957183523,0.06961302586226885,0.0714415995022694,0.07326323356717415,0.07507798053032909,0.07688589227215788,0.07868702008906213,0.08048141470215353,0.08226912626582515,0.08405020437616223,0.08582469807919879,0.08759265587902108,0.08935412574572303,0.09110915512321613,0.0928577909368966,0.09460007960117431,0.09633606702686488,0.09806579862844811,0.09978931933119788,0.10150667357818216,0.10321790533714033,0.10492305810723689,0.10662217492569642,0.10831529837432124,0.11000247058589459,0.11168373325047162,0.11335912762156047,0.11502869452219638,0.11669247435090976,0.11835050708759182,0.12000283229925872,0.12164948914571762,0.1232905163851347,0.1249259523795096,0.12655583510005589,0.12818020213249134,0.1297990906822382,0.1314125375795365,0.13302057928447183,0.13462325189191887,0.1362205911364027,0.13781263239687977,0.13939941070143957,0.14098096073192878,0.1425573168284999,0.14412851299408513,0.14569458289879703,0.14725555988425815,0.1488114769678602,0.15036236684695448,0.15190826190297477,0.15344919420549388,0.15498519551621587,0.156516297292904,0.15804253069324628,0.15756960299672948,0.15682114505983596,0.15608207209810282,0.1553522374727365,0.15463149728582415,0.15391971032074997,0.15321673798408753,0.1525224442489264,0.1518366955995943,0.15115936097773536,0.1504903117297077,0.14982942155526396,0.1491765664574797,0.14853162469389564,0.14789447672884073,0.14726500518690408,0.14664309480752458,0.1460286324006683,0.14542150680356425,0.14482160883847017,0.14422883127144107,0.14364306877207345,0.14306421787419973,0.1424921769375072,0.14192684611005765,0.14136812729168374,0.1408159240982387,0.14027014182667805,0.13973068742095035,0.1391974694386772,0.1386703980186008,0.13814938484878045,0.13763434313551764,0.1371251875729915,0.13662183431358632,0.1361242009388937,0.13563220643137142,0.13514577114664292,0.13466481678642142,0.13418926637204176,0.133719044218586,0.13325407590958685,0.13279428827229495,0.13233960935349565,0.13188996839586184,0.13144529581482922,0.13100552317598133,0.13057058317293158,0.1301404096056899,0.12971493735950243,0.12929410238415243,0.12887784167371108,0.12846609324672736,0.12805879612684626,0.12765589032384478,0.12725731681507602,0.1268630175273109,0.12647293531896878,0.12608701396272642,0.12570519812849784,0.12532743336677463,0.1249536660923191,0.12458384356820185,0.12421791389017492,0.12385582597137361,0.12349752952733811,0.12314297506134851,0.1227921138500649,0.12244489792946618,0.12210128008108005,0.12176121381849782,0.1214246533741672,0.12109155368645666,0.12076187038698513,0.12043555978821109,0.12011257887127477,0.11979288527408784,0.11947643727966502,0.11916319380469206,0.1188531143883244,0.11854615918121189,0.11824228893474392,0.11794146499051013,0.11764364926997208,0.11734880426434086,],dtype=float)
plt.plot(x,y)

plt.subplot(grid_grid[1,2:4])
x=np.array([100,100.5,101,101.5,102,102.5,103,103.5,104,104.5,105,105.5,106,106.5,107,107.5,108,108.5,109,109.5,110,110.5,111,111.5,112,112.5,113,113.5,114,114.5,115,115.5,116,116.5,117,117.5,118,118.5,119,119.5,120,120.5,121,121.5,122,122.5,123,123.5,124,124.5,125,125.5,126,126.5,127,127.5,128,128.5,129,129.5,130,130.5,131,131.5,132,132.5,133,133.5,134,134.5,135,135.5,136,136.5,137,137.5,138,138.5,139,139.5,140,140.5,141,141.5,142,142.5,143,143.5,144,144.5,145,145.5,146,146.5,147,147.5,148,148.5,149,149.5,150,150.5,151,151.5,152,152.5,153,153.5,154,154.5,155,155.5,156,156.5,157,157.5,158,158.5,159,159.5,160,160.5,161,161.5,162,162.5,163,163.5,164,164.5,165,165.5,166,166.5,167,167.5,168,168.5,169,169.5,170,170.5,171,171.5,172,172.5,173,173.5,174,174.5,175,175.5,176,176.5,177,177.5,178,178.5,179,179.5,180,180.5,181,181.5,182,182.5,183,183.5,184,184.5,185,185.5,186,186.5,187,187.5,188,188.5,189,189.5,190,190.5,191,191.5,192,192.5,193,193.5,194,194.5,195,195.5,196,196.5,197,197.5,198,198.5,199,199.5,200,],dtype=float)
y=np.array([-0.3,-0.2976059800747013,-0.2952238411904793,-0.2928534660029997,-0.2904947388978338,-0.2881475459566217,-0.28581177492405874,-0.2834873151756804,-0.28117405768642495,-0.27887189499994836,-0.27658072119867266,-0.2743004318745457,-0.2720309241004916,-0.2697720964025335,-0.26752384873256885,-0.2652860824417794,-0.2630587002546584,-0.26084160624363706,-0.2586347058042949,-0.25643790563113716,-0.2542511136939241,-0.2520742392145363,-0.2499071926443635,-0.24774988564220057,-0.24560223105263848,-0.24346414288493598,-0.24133553629236035,-0.2392163275519843,-0.23710643404492607,-0.2350057742370226,-0.23291426765992382,-0.2308318348925967,-0.22875839754322883,-0.22669387823152135,-0.22463820057136094,-0.2225912891538613,-0.22055306953076478,-0.21852346819819468,-0.2165024125807498,-0.21448983101593252,-0.2124856527389018,-0.21048980786754326,-0.20850222738784815,-0.20652284313959435,-0.20455158780232072,-0.20258839488158864,-0.20063319869552346,-0.19868593436162862,-0.1967465377838662,-0.194814945639998,-0.19289109536917934,-0.1909749251598013,-0.18906637393757442,-0.1871653813538479,-0.18527188777416,-0.18338583426701308,-0.18150716259286764,-0.17963581519335212,-0.17777173518068126,-0.17591486632727948,-0.1740651530556043,-0.17222254042816476,-0.17038697413773116,-0.1685584004977306,-0.16673676643282584,-0.16492201946967092,-0.16311410772784213,-0.16131297991093785,-0.15951858529784646,-0.15773087373417483,-0.15594979562383776,-0.1541753019208012,-0.1524073441209789,-0.15064587425427695,-0.14889084487678386,-0.14714220906310338,-0.14539992039882568,-0.14366393297313512,-0.14193420137155188,-0.14021068066880213,-0.13849332642181783,-0.13678209466285965,-0.1350769418927631,-0.13337782507430357,-0.13168470162567875,-0.1299975294141054,-0.12831626674952837,-0.12664087237843952,-0.12497130547780361,-0.12330752564909023,-0.12164949291240817,-0.11999716770074127,-0.11835051085428237,-0.11670948361486529,-0.11507404762049041,-0.1134441648999441,-0.11181979786750866,-0.11020090931776177,-0.1085874624204635,-0.10697942071552816,-0.10537674810808112,-0.1037794088635973,-0.10218736760312022,-0.10060058929856039,-0.09901903926807122,-0.09744268317150008,-0.09587148700591484,-0.09430541710120297,-0.09274444011574186,-0.0911885230321398,-0.0896376331530455,-0.08809173809702522,-0.08655080579450611,-0.08501480448378411,-0.083483702707096,-0.08195746930675371,-0.08044159746477728,-0.0789446815909902,-0.07746653566752394,-0.07600686641679132,-0.07456538604296659,-0.07314181211281824,-0.07173586743949331,-0.07034727996917108,-0.0689757826705069,-0.06762111342678905,-0.06628301493073371,-0.06496123458184626,-0.06365552438627772,-0.062365640859109596,-0.061091344928999765,-0.05983240184512645,-0.058588581086367456,-0.05735965627265492,-0.0561454050784468,-0.054945609148258634,-0.05376005401420041,-0.052588529015465214,-0.05143082721971776,-0.05028674534633269,-0.049156083691433636,-0.04803864605468576,-0.04693423966779573,-0.045842675124674395,-0.04476376631321903,-0.043697330348672674,-0.042643187508519906,-0.041601161168879235,-0.0405710777423536,-0.039552766617301255,-0.038546060098490965,-0.03755079334910576,-0.036566804334061134,-0.03559393376460418,-0.03463202504416114,-0.033680924215401815,-0.03274047990849029,-0.031810543290492016,-0.0308909680159082,-0.029981610178309588,-0.02908232826304195,-0.028192983100976714,-0.027313437823280984,-0.026443557817181485,-0.025583210682698122,-0.02473226619032318,-0.023890596239623182,-0.02305807481874048,-0.022234577964773062,-0.02141998372501082,-0.02061417211900785,-0.01981702510147029,-0.019028426525940126,-0.018248262109255838,-0.017476419396771165,-0.016712787728314023,-0.015957258204867562,-0.015209723655956506,-0.014470078607721966,-0.013738219251668142,-0.013014043414065493,-0.012297450525994548,-0.011588341594015334,-0.010886619171448134,-0.010192187330250667,-0.009504951633478411,-0.008824819108313968,-0.008151698219652725,-0.007485498844231603,-0.006826132245288571,-0.006173511047740515,-0.005527549213867856,-0.004888162019493977,-0.0042552660306483464,-0.0036287790807024004,-0.0030086202479670805,-0.0023947098337421023,-0.0017869693408061424,-0.001185321452338556,-0.0005896900112624486,-0,],dtype=float)
plt.plot(x,y)

plt.subplot(grid_grid[0,3])
x=np.array([0,],dtype=float)
y=np.array([0,],dtype=float)
plt.plot(x,y,label=r' P = 0.3')
plt.axis([1,2,1,2])

plt.subplot(grid_grid[0,3])
coo=[-0.5,-0.15,1.4,0.102,]
h,l=plt.gca().get_legend_handles_labels()
if len(h)>0 and len(l)>0:
    leg=plt.legend(handlelength=2.5,ncol=1,loc=3,bbox_to_anchor=coo,mode='expand',borderaxespad=0.0,columnspacing=1,handletextpad=0.05)
    add_to_ea(leg)
plt.axis('off')

plt.subplot(grid_grid[1,0:2])
x=np.array([103.36786024513249,112.60427277371697,120.21098643063023,131.75650209136083,141.89878696724514,158.06250889226797,171.5855553934471,192.3674835827622,],dtype=float)
y=np.array([-0.043451998936441756,-0.003292819014326988,0.028396865305834157,0.0723621525211619,0.10793455522615582,0.15516741555223573,0.1394187237794026,0.12138313117384571,],dtype=float)
plt.plot(x,y,label=r'Gauss points',linestyle='None',markerfacecolor='none',marker='o')
x=np.array([103.36786024513249,112.60427277371697,120.21098643063023,131.75650209136083,141.89878696724514,158.06250889226797,171.5855553934471,192.3674835827622,],dtype=float)
y=np.array([0.0994179855922437,0.0813410038744405,0.07070966573241697,0.058804683417073136,0.051456402396234155,0.04303841305197653,0.038388678540044054,0.03339699384544686,],dtype=float)
plt.plot(x,y,linestyle='None',markerfacecolor='none',marker='s')
plt.gca().set_axisbelow(True)
plt.grid(linestyle='--',color='grey',zorder=-1000)
plt.gca().set_xlabel(r'Radial coordinate $r$')
plt.gca().set_ylabel(r'Hoop stress $\sigma_\theta$')

plt.subplot(grid_grid[1,2:4])
x=np.array([103.36786024513249,112.60427277371697,120.21098643063023,131.75650209136083,141.89878696724514,158.06250889226797,171.5855553934471,192.3674835827622,],dtype=float)
y=np.array([-0.28358618493414833,-0.2434038981827245,-0.2116242298105521,-0.16764217994464392,-0.1320507193125501,-0.08065860849519146,-0.045457071933585225,-0.009572318173799138,],dtype=float)
plt.plot(x,y,linestyle='None',markerfacecolor='none',marker='o')
x=np.array([103.36786024513249,112.60427277371697,120.21098643063023,131.75650209136083,141.89878696724514,158.06250889226797,171.5855553934471,192.3674835827622,],dtype=float)
y=np.array([-0.13367365319167354,-0.09867385163289351,-0.07730060278095946,-0.053493653584286406,-0.03856867847383949,-0.021960258492127724,-0.012506091319915553,-0.0026329251789798227,],dtype=float)
plt.plot(x,y,linestyle='None',markerfacecolor='none',marker='s')
plt.gca().set_axisbelow(True)
plt.grid(linestyle='--',color='grey',zorder=-1000)
plt.gca().set_xlabel(r'Radial coordinate $r$')
plt.gca().set_ylabel(r'Radial stress $\sigma_r$')
plt.gcf().set_size_inches(8.302200083022,6.226650062266501)

fn=r'data/spo/test_spo_752_pres_sphere.svg'
plt.savefig(fn,bbox_inches='tight',bbox_extra_artists=EXTRA_ARTISTS)
